
# The top-level SGML file.
DOC_MAIN_SGML_FILE=$(DOC_MODULE)-api.sgml

EXTRA_DIST = $(DOC_MODULE)-api.sgml $(DOC_MODULE)-sections.txt

clean-local:
	rm -f *~ *.bak *.hierarchy *.signals *.args *-unused.txt

maintainer-clean-local: clean
	rm -rf sgml html $(DOC_MODULE)-decl-list.txt $(DOC_MODULE)-decl.txt 

if ENABLE_GTK_DOC

TARGET_DIR=$(apidocdir)/$(DOC_MODULE)

all-local: templates sgml html

scan:
	cd $(srcdir) && gtkdoc-scan --module=$(DOC_MODULE) --source-dir=$(DOC_SOURCE_DIR)

templates: scan
	cd $(srcdir) && gtkdoc-mktmpl --module=$(DOC_MODULE)

sgml: templates
	cd $(srcdir) && gtkdoc-mkdb --module=$(DOC_MODULE) --source-dir=$(DOC_SOURCE_DIR)

html: sgml
	if ! test -d html ; then mkdir html ; fi
	cd html && gtkdoc-mkhtml $(DOC_MODULE) ../$(srcdir)/$(DOC_MAIN_SGML_FILE)

install-data-local:
	$(INSTALL) -d -m 0755 $(DESTDIR)$(TARGET_DIR)
	$(INSTALL_DATA) ./html/*.html $(DESTDIR)$(TARGET_DIR)
	$(INSTALL_DATA) ./html/index.sgml $(DESTDIR)$(TARGET_DIR)
	gtkdoc-fixxref --module=$(DOC_MODULE) --html-dir=$(DESTDIR)$(apidocdir)

dist-hook:
	(cd $(srcdir) ; tar cvf - html) | (cd $(distdir); tar xf -)

.PHONY : html sgml templates scan

else

all-local:
	@echo "Dummy target $@."

dist-hook:
	@echo "Dummy target $@."
	@echo "Re-run configure with adequate parameters and run make again to build docs."

install-data-local:
	@echo "Dummy target $@"
	@echo "Re-run configure with adequate parameters and run make again to build docs."

endif

# Local Variables:
# mode: makefile
# End:
